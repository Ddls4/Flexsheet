IAE  : superMaster
Redes : Soft$$123 


N: grupoddfjg  # root
C: superMaster7! # superMaster
DB: = "ddfjg"
IP: 192.168.0.200


üìò Gu√≠a R√°pida de Comandos MySQL
üßë‚Äçüíª Conexi√≥n al Servidor MySQL
sudo mysql -u [NombreUsuario] -p

üìÇ Comandos B√°sicos
Mostrar todas las bases de datos disponibles
SHOW DATABASES;

Seleccionar una base de datos para usar
USE [NombreDeLaBaseDeDatos];

Mostrar todas las tablas de la base de datos seleccionada
SHOW TABLES;

Ver la estructura de una tabla
DESCRIBE [NombreDeLaTabla];

Consultar todos los datos de una tabla
SELECT * FROM [NombreDeLaTabla];

üèóÔ∏è Crear una Tabla
CREATE TABLE NombreDeLaTabla (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    edad INT,
    correo VARCHAR(100)
);
Este es un ejemplo de c√≥mo crear una tabla con algunos campos comunes.

-----------------------------------------------------------------------
TABLA de nosotros 

          1    N              1    1
Usuarios  <---->  Proyectos  <----->   Inf proyects

- I.D                - ID                  - ID  
- Nombre             - Usuario ID FK       - Boton_ID FK
- Correo             - Nombre              - Json
- Google             
- Contrease√±a        

-------------------------------------------------------------------------

sudo systemctl status mysql
sudo systemctl start mysql
¬øMySQL escucha en todas las interfaces?
sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf
bind-address = 127.0.0.1
bind-address = 0.0.0.0
¬øEst√° abierto el puerto 3306 en el firewall de Linux?
sudo ufw status
sudo ufw allow 3306/tcp
sudo ufw reload
¬øEl usuario MySQL tiene permisos para conectarse desde cualquier host?
SELECT user, host FROM mysql.user WHERE user = 'grupoddfjg';

Si el host para ese usuario no es '%', entonces necesitas crear o actualizar el usuario para que pueda conectarse remotamente:
CREATE USER 'grupoddfjg'@'%' IDENTIFIED BY 'tu_contrase√±a';
GRANT ALL PRIVILEGES ON *.* TO 'grupoddfjg'@'%';
FLUSH PRIVILEGES;


---------------------------------------------------------------------------------------
MySQL


-- -----------------------------------------------------
-- Table `mydb`.`Permisos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Permisos` (
  `id` INT NULL,
  `1_R` VARCHAR(45) NULL,
  `2_W` VARCHAR(45) NULL,
  `Json` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo de usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo de usuario` (
  `id` INT NULL,
  `Nombre` VARCHAR(45) NULL,
  `Administrador` VARCHAR(45) NULL,
  `Usuario sin privilegio` VARCHAR(45) NULL,
  `Tipo de usuario` VARCHAR(45) NULL,
  `Permisos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Permisos_id`),
  INDEX `fk_Tipo de usuario_Permisos1_idx` (`Permisos_id` ASC) VISIBLE,
  CONSTRAINT `fk_Tipo de usuario_Permisos1`
    FOREIGN KEY (`Permisos_id`)
    REFERENCES `mydb`.`Permisos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Mesa de trabajo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Mesa de trabajo` (
  `id` INT NULL,
  `Usuario` VARCHAR(45) NULL,
  `Nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Usuarios` (
  `id` INT NULL,
  `Nombre` VARCHAR(45) NULL,
  `Correo` VARCHAR(45) NULL,
  `Contrase√±a` VARCHAR(45) NULL,
  `Tipo de usuario` VARCHAR(45) NULL,
  `Tipo de usuario_id` INT NOT NULL,
  `Mesa de trabajo_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Tipo de usuario_id`),
  UNIQUE INDEX `Correo_UNIQUE` (`Correo` ASC) VISIBLE,
  UNIQUE INDEX `Contrase√±a_UNIQUE` (`Contrase√±a` ASC) VISIBLE,
  UNIQUE INDEX `Tipo de usuario_UNIQUE` (`Tipo de usuario` ASC) VISIBLE,
  INDEX `fk_Usuarios_Tipo de usuario_idx` (`Tipo de usuario_id` ASC) VISIBLE,
  INDEX `fk_Usuarios_Mesa de trabajo1_idx` (`Mesa de trabajo_id` ASC) VISIBLE,
  CONSTRAINT `fk_Usuarios_Tipo de usuario`
    FOREIGN KEY (`Tipo de usuario_id`)
    REFERENCES `mydb`.`Tipo de usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuarios_Mesa de trabajo1`
    FOREIGN KEY (`Mesa de trabajo_id`)
    REFERENCES `mydb`.`Mesa de trabajo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Inf de mesa de trabajo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Inf de mesa de trabajo` (
  `id` INT NULL,
  `Boton_ID` VARCHAR(45) NULL,
  `Json` JSON NULL,
  `Mesa de trabajo_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Inf de mesa de trabajo_Mesa de trabajo1_idx` (`Mesa de trabajo_id` ASC) VISIBLE,
  CONSTRAINT `fk_Inf de mesa de trabajo_Mesa de trabajo1`
    FOREIGN KEY (`Mesa de trabajo_id`)
    REFERENCES `mydb`.`Mesa de trabajo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
